#!/bin/bash
set -e

if ! command -v nvim &>/dev/null; then
  # NeoVim is not installed, so we don't need to install the plugins
  exit 0
fi

cat <<MSG
--------------------
>>  NeoVim plugins
--------------------
MSG

function __md5_generate() {
  local file=$1
  openssl md5 "$file" | sed -e 's/MD5(.*)= //g'
}
function __md5_verify() {
  local file=$1
  local checksumfile=${2:-"${file}.md5"}
  #echo "Verifying ${file} with ${checksumfile}"

  if diff <(__md5_generate "$file") <(cat "$checksumfile") &>/dev/null; then
    return 0
  else
    return 1
  fi
}
function __verify_base_and_local_md5() {
  __md5_verify "$1" && ([ ! -e "$1".local ] || __md5_verify "$1".local)
}
function __generate_base_and_local_md5() {
  if [ -e "$1" ]; then
    __md5_generate "$1" > "$1".md5
  fi
  if [ -e "$1".local ]; then
    __md5_generate "$1".local > "$1".local.md5
  fi
}

if [ ! -e "$HOME"/.config/nvim/autoload/plug.vim ]; then
  curl -fLo "$HOME"/.config/nvim/autoload/plug.vim --create-dirs \
    https://github.com/junegunn/vim-plug/raw/master/plug.vim
fi

if [ -e "$HOME"/.config/nvim/bundles.vim ]; then
  if ! __verify_base_and_local_md5 "$HOME"/.config/nvim/bundles.vim; then
    printf 'NeoVim bundles are being installed... '
    if command nvim -u "$HOME"/.config/nvim/bundles.vim +'PlugInstall' +'qall' </dev/null &>/dev/null; then
      printf 'Done\n'
      __generate_base_and_local_md5 "$HOME"/.config/nvim/bundles.vim
    else
      printf 'ERROR\n'
      printf 'Encountered an error when running `%s`\n' "nvim +'PlugInstall'" >&2
    fi
  fi

  printf 'NeoVim bundles are being updated... '
  if command nvim -u "$HOME"/.config/nvim/bundles.vim +'PlugUpdate' +'PlugClean!' +'qall' </dev/null &>/dev/null; then
    printf 'Done\n'
    __generate_base_and_local_md5 "$HOME"/.config/nvim/bundles.vim
  else
    printf 'ERROR\n'
    printf 'Encountered an error when running `%s`\n' "nvim +'PlugUpdate'" >&2
  fi
fi

cat <<MSG
--------------------
>>  Done.
--------------------
MSG
