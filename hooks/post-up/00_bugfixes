#!/usr/bin/env bash
set -euo pipefail

HOOK_DIR="${0%/*}/../"
source "${HOOK_DIR}/lib/base.sh"
trap -- '__cleanup_temp' EXIT

__link_xdgconfig() {
  if [ -z "${XDG_CONFIG_HOME:-}" ]; then
    # __message 'TEMP: XDG_CONFIG_HOME is not set. Temporarily assuming "~/.config"...'
    XDG_CONFIG_HOME="${HOME}/.config"
  fi

  if [ "$XDG_CONFIG_HOME" != "$HOME/.config" ] && [ -n "$XDG_CONFIG_HOME" ]; then
    if [ ! -e "$XDG_CONFIG_HOME" ]; then
      __message "Creating ${XDG_CONFIG_HOME/#${HOME}/~} for use with XDG_CONFIG_HOME"
      mkdir -p "$XDG_CONFIG_HOME"
    fi

    __message "FIX: XDG_CONFIG_HOME varies per platform. Symlinking entries in ~/.config to ${XDG_CONFIG_HOME/#${HOME}/~} for consistency"
    for f in "${HOME}/.config/"*; do
      previous_dir="${HOME}/.config"
      desired_dir="$XDG_CONFIG_HOME"
      case "$f" in
        "${HOME}/.config/git")
          # Currently just symlink whitelisted files and directories
          command ln -vs "$f" "${f/#${previous_dir}/${desired_dir}}"
          ;;
        *)
          ;;
      esac
    done
  fi
}

__fix_bluetooth_on_linux() {
  if ! is_linux; then return 0; fi
  if ! command -v gsettings &>/dev/null; then
    return 0
  fi

  # This is used on an XFCE desktop setting
  local current
  current="$(gsettings get org.blueman.plugins.powermanager auto-power-on 2>/dev/null || true)"

  if [ "$current" == 'true' ]; then
    __message "FIX: Bluetooth should not default to turning on at every boot"
    gsettings set org.blueman.plugins.powermanager auto-power-on false
  fi
}

__disable_keybase_gui_on_login() {
  if ! command -v keybase &>/dev/null; then
    return 0
  fi

  if ! grep -qFe 'Autostart-enabled=false' "${HOME}/.config/autostart/keybase_autostart.desktop" &>/dev/null; then
    __message 'FIX: Disable Keybase GUI from starting at login'
    keybase ctl autostart --disable
  fi
}

__observe_readline_bindings_on_mac() {
  if ! is_mac; then return 0; fi

  if ! plist-exec '.GlobalPreferences.plist' 'Print :' &>/dev/null; then
    return 0
  fi

  __message 'Keyboard: MacOS observes readline key bindings in the terminal'
  plist-ensure-value '.GlobalPreferences.plist' ':AppleKeyboardUIMode' '2' 'integer'
}

__ensure_darkmode_on_mac() {
  if ! is_mac; then return 0; fi
  if command -v dark-mode &>/dev/null; then
    __message 'MacOS: Dark mode enabled'
    command dark-mode on
  else
    __error 'MacOS: Requires `dark-mode` package to set the system UI color scheme'
  fi
}

__fix_postgres_config() {
  if [ ! -e "${HOME}/.psqlrc.local" ]; then
    __message "FIX: Postgres doesn't like includes for non-existent files"
    touch "${HOME}/.psqlrc.local"
  fi
}

__silence_gnu_parallel() {
  mkdir -p "${HOME}/.parallel"
  touch "${HOME}/.parallel/will-cite"
}

__build_bat_cache() {
  if ! command -v bat &>/dev/null; then
    return 0
  fi
  __message "Building theme and syntax cache for bat..."

  command bat cache --build &>/dev/null
}

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
  printf '%s\n' '-------------------------------------------------------'
  __message 'Bug Fixes'
  printf '%s\n' '-------------------------------------------------------'

  __link_xdgconfig
  __silence_gnu_parallel
  __fix_postgres_config
  __fix_bluetooth_on_linux
  __observe_readline_bindings_on_mac
  __ensure_darkmode_on_mac
  __disable_keybase_gui_on_login
  __build_bat_cache
fi
