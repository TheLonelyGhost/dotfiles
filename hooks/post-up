#!/bin/bash

npm_packages_dir=${NPM_PACKAGES:-"${HOME}/.npm-packages"}
gem_home_dir=${GEM_HOME:-"${HOME}/.gem"}

touch "${HOME}/.psqlrc.local"
mkdir "${npm_packages_dir}"
mkdir "${gem_home_dir}"

HOOK_DIR=$(dirname "$(readlink -f "$0")")

function __md5_generate() {
  local file=$1
  ( md5sum <"$file"; test $? = 127 && md5 <"$file" ) | cut -d' ' -f1
}
function __md5_verify() {
  local file=$1
  local checksumfile=${2:-"${file}.md5"}
  #echo "Verifying ${file} with ${checksumfile}"

  if [ $(__md5_generate "$file") = $(cat "$checksumfile") ]; then
    return 0
  else
    return 1
  fi
}
function __verify_or_source() {
  local file="$1"
  local checksumfile="${file}.md5"

  if [ -f "$checksumfile" ] && __md5_verify "$file" "$checksumfile"; then
    return 0
  fi

  source "$file"

  __md5_generate "$file" > "$checksumfile"
}

if [ -t 2 ]; then
  fg_red=$'\e[31m'
  fg_bold_white=$'\e[1;37m'
  reset_color=$'\e[m'
else
  fg_red=""
  fg_bold_white=""
  reset_color=""
fi

# Install OS-specific packages
case "$(uname -a 2>/dev/null)" in
  *GNU/Linux)
    if [ ! -z "$(command -v apt-get 2>/dev/null)" ]; then
      __verify_or_source "${HOOK_DIR}/packages/apt"
    elif [ ! -z "$(command -v yum 2>/dev/null)" ]; then
      __verify_or_source "${HOOK_DIR}/packages/yum"
    else
      cat <<MSG >&2
${fg_red}Warning:${reset_color} your operating system is not recognized.
Unable to automatically install default packages required for these
configurations.
MSG
    fi
    ;;
  Darwin*)
    if [ ! -z "$(command -v brew 2>/dev/null)" ]; then
      __verify_or_source "${HOOK_DIR}/packages/brew"
    else
      cat <<MSG >&2
${fg_red}Warning:${reset_color} you do not appear to have homebrew
installed and/or configured properly. Please install homebrew, if you
haven't already, and then run:
  ${fg_bold_white}brew doctor${reset_color}

Once finished with these steps, rerun ${fg_bold_white}rcup${reset_color}

MSG
    fi
    ;;
  *)
    cat <<MSG >&2
${fg_red}Warning:${reset_color} your operating system is not recognized.
Unable to automatically install default packages required for these
configurations.

MSG
    ;;
esac

if command -v gem > /dev/null; then
  # TODO: Additional rubygems configurations?

  [ -f "${HOOK_DIR}/packages/rubygems" ] && \
    __verify_or_source "${HOOK_DIR}/packages/rubygems" \
    || true
fi

if command -v npm > /dev/null; then
  npm config set prefix "${npm_packages_dir}"

  [ -f "${HOOK_DIR}/packages/npm" ] && \
    __verify_or_source "${HOOK_DIR}/packages/npm" \
    || true
fi

# Install Vim-Plug and any plugins it handles
if [ ! -e "$HOME"/.vim/autoload/plug.vim ]; then
  curl -fLo "$HOME"/.vim/autoload/plug.vim --create-dirs \
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi
vim -u "$HOME"/.vimrc.bundles +PlugInstall +'PlugClean!' +qall

# detect old OS X broken /etc/zshenv and suggest rename
if grep -qw path_helper /etc/zshenv 2>/dev/null; then
  if [ -t 2 ]; then
    fg_red=$'\e[31m'
    fg_bold_white=$'\e[1;37m'
    reset_color=$'\e[m'
  else
    fg_red=""
    fg_bold_white=""
    reset_color=""
  fi

  # resolve BASH_SOURCE to absolute path
  bash_source="$BASH_SOURCE"
  if [[ $bash_source == */* ]]; then
    pushd "${bash_source%/*}" >/dev/null
    bash_source="${PWD}/${bash_source##*/}"
    popd >/dev/null
  fi

  cat <<MSG >&2
${fg_red}Warning:${reset_color} \`/etc/zshenv' configuration file on your system may cause unexpected
PATH changes on subsequent invocations of the zsh shell. The solution is to
rename the file to \`zprofile':
  ${fg_bold_white}sudo mv /etc/{zshenv,zprofile}${reset_color}

(called from ${bash_source}:${LINENO})

MSG
fi
