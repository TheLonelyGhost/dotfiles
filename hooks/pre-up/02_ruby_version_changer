#!/usr/bin/env bash
set -euo pipefail

HOOK_DIR="${0%/*}/../"
source "${HOOK_DIR}/lib/base.sh"
trap -- '__cleanup_temp' EXIT

__install_chruby() {
  local version tmpdir download signature pubkey extract_dir
  version="${1}"

  if type chruby &>/dev/null || [ -e /usr/local/share/chruby/chruby.sh ]; then
    __message 'chruby is already installed'
    return 0
  fi

  tmpdir=$(mktemp-dir)
  download="${tmpdir}/chruby-${version}.tar.gz"
  signature="${tmpdir}/chruby-${version}.tar.gz.asc"
  pubkey="${tmpdir}/postmodern.asc"
  extract_dir="${tmpdir}/chruby-latest"

  __message 'Downloading chruby...'
  curl -LSso "$download" "https://github.com/postmodern/chruby/archive/v${version}.tar.gz"

  if command -v gpg &>/dev/null; then
    if ! gpg --fingerprint '0xB9515E77' &>/dev/null; then
      __message 'Importing GPG public key for the author of chruby...'
      curl -LSso "$pubkey" 'https://github.com/postmodern/postmodern.github.io/raw/master/postmodern.asc'
      gpg --import "$pubkey"
    fi

    __message 'Verifying signature on downloaded copy of chruby...'
    curl -LSso "$signature" "https://github.com/postmodern/chruby/raw/master/pkg/chruby-${version}.tar.gz.asc"

    if gpg --verify "$signature" "$download" &>/dev/null; then
      __message 'Verified'
    else
      __fatal "Signature mismatch for $(basename -- "$download")"
    fi
  fi

  __message 'Extracting downloaded package...'
  if [ -d "$extract_dir" ]; then
    rm -rf "$extract_dir"
  fi
  mkdir -p "$extract_dir"

  tar xzf "$download" -C "$extract_dir" --strip-components=1
  pushd "$extract_dir" &>/dev/null
  __message 'Installing chruby...'
  sudo make install
  popd &>/dev/null
  __message 'Done'
}

__install_ruby_install() {
  local version tmpdir download signature pubkey extract_dir
  version="${1}"

  if command -v ruby-install &>/dev/null; then
    __message 'ruby-install is already installed'
    return 0
  fi

  tmpdir=$(mktemp-dir)
  download="${tmpdir}/ruby-install-${version}.tar.gz"
  signature="${tmpdir}/ruby-install-${version}.tar.gz.asc"
  pubkey="${tmpdir}/postmodern.asc"
  extract_dir="${tmpdir}/ruby-install-latest"

  __message 'Downloading ruby-install...'
  curl -LSso "$download" "https://github.com/postmodern/ruby-install/archive/v${version}.tar.gz"

  if command -v gpg &>/dev/null; then
    if ! gpg --fingerprint '0xB9515E77' &>/dev/null; then
      __message 'Importing GPG public key for the author of ruby-install...'
      curl -LSso "$pubkey" 'https://github.com/postmodern/postmodern.github.io/raw/master/postmodern.asc'
      gpg --import "$pubkey"
    fi

    __message 'Verifying signature on downloaded copy of ruby-install...'
    curl -LSso "$signature" "https://github.com/postmodern/ruby-install/raw/master/pkg/ruby-install-${version}.tar.gz.asc"

    if gpg --verify "$signature" "$download" &>/dev/null; then
      __message "Verified!"
    else
      __fatal "Signature mismatch for $(basename "$download")"
    fi
  fi

  __message "Extracting downloaded package..."
  if [ -d "$extract_dir" ]; then
    rm -rf "$extract_dir"
  fi
  mkdir -p "$extract_dir"

  tar xzf "$download" -C "$extract_dir" --strip-components=1
  pushd "$extract_dir"
  __message "Installing ruby-install..."
  sudo make install
  popd

  __message "Done"
}

__ensure_ruby_directory_exists() {
  if [ ! -d "${HOME}/.rubies" ]; then
    mkdir -p "${HOME}/.rubies"
  fi
}


if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
  printf '%s\n' '-------------------------------------------------------'
  __message 'Ruby version manager'
  printf '%s\n' '-------------------------------------------------------'

  __ensure_ruby_directory_exists
  __install_chruby '0.3.9'
  __install_ruby_install '0.6.0'
fi
