#!/usr/bin/env bash
set -euo pipefail

HOOK_DIR="${0%/*}/../"
source "${HOOK_DIR}/lib/base.sh"
trap -- '__cleanup_temp' EXIT

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
  printf '%s\n' '-------------------------------------------------------'
  __message 'Generic Tools Manager (asdf-vm)'
  printf '%s\n' '-------------------------------------------------------'

  if ! [ -e "${HOME}/.asdf" ]; then
    command git clone https://github.com/asdf-vm/asdf.git "${HOME}/.asdf"
    pushd "${HOME}/.asdf" &>/dev/null
    command git checkout "$(command git describe --abbrev=0 --tags)"
    popd &>/dev/null
  fi

  asdf="$(__get_cmd "asdf" "${HOME}/.asdf/bin/asdf")"

  "$asdf" update

  desired_plugins=(
    # Languages
    python
    golang
    ruby
    nodejs

    # HashiCorp tools
    boundary
    consul
    nomad
    packer
    sentinel
    serf
    terraform
    vagrant
    vault
    waypoint

    # Kubernetes
    kubectl
    helm

    # Other
    tfsec
    gohugo
  )
  existing_plugins="$("$asdf" plugin list)"

  for plugin in "${desired_plugins[@]}"; do
    if ! grep -Fe "$plugin" <<<"$existing_plugins" &>/dev/null; then
      "$asdf" plugin add "$plugin"
    fi
  done

  # Resolve chicken-or-egg problem for symlinked config files and using them below:
  for file in default-gems default-python-packages default-npm-packages ; do
    if [ -e "${HOOK_DIR}/../${file}" ] && ! [ -e "${HOME}/.${file}" ]; then
      command ln -vs "$(abspath "${HOOK_DIR}/../${file}")" "${HOME}/.${file}"
    fi
  done

  # Will install any missing tools
  # When installing a tool, will also install default packages (see above)
  __message 'Installing asdf managed tools'
  pushd "${HOME}" 1>/dev/null 2>&1
  "$asdf" install
  popd 1>/dev/null 2>&1
fi
