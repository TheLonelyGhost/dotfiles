#!/usr/bin/env bash
set -euo pipefail

HOOK_DIR="${0%/*}/../"
source "${HOOK_DIR}/lib/base.sh"

if [ -t 2 ]; then
  fg_red=$(tput setaf 1)
  reset_color=$(tput sgr0)
else
  fg_red=""
  reset_color=""
fi

__banner() {
  printf '%s\n' '-------------------------------------------------------'
  case "$1" in
    apt)
      __message 'Installing Debian-specific dependencies'
      ;;
    yum)
      __message 'Installing RedHat-specific dependencies'
      ;;
    brew)
      __message 'Installing MacOS-specific dependencies'
      ;;
    pacman)
      __message 'Installing Arch-specific dependencies'
      ;;
    *)
      __message 'Installing platform-specific dependencies'
      ;;
  esac
  printf '%s\n' '-------------------------------------------------------'
}

__when_macos() {
  if command -v brew &>/dev/null; then
    __banner "brew"

    if [ ! -e /usr/include/zlib.h ] && command -v 'defaults' 1>/dev/null 2>/dev/null; then
      # Fix issue in macOS Mojave where XCode doesn't install headers for installed libraries
      if [[ $(defaults read loginwindow SystemVersionStampAsString) =~ 10.14* ]] && [ -e /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg ]; then
        sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /
      fi
    fi
    export PYENV_VERSION='system'
    command brew update
    command brew bundle --file="${HOOK_DIR}/packages/Brewfile"
  else
    __error "${fg_red}ERROR:${reset_color} You do not appear to have homebrew installed and/or configured properly."
    __error "Please ensure homebrew is installed and run \`brew doctor\`"
    __fatal 'Unable to automatically install default packages required for these configurations'
  fi
}

__when_gnulinux() {
  if command -v apt-get &>/dev/null; then
    __banner 'apt'
    __install_packages 'apt'
  elif command -v yum &>/dev/null; then
    __banner 'yum'
    __install_packages 'yum'
  elif command -v pacman &>/dev/null; then
    __banner 'pacman'
    __install_packages 'pacman'
  else
    __error "${fg_red}WARNING:${reset_color} Your operating system is not recognized."
    __fatal 'Unable to automatically install default packages required for these configurations'
  fi
}


if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
  # Install OS-specific packages
  if is_mac; then
    __when_macos
  else
    __when_gnulinux
  fi
fi
