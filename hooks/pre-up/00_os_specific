#!/usr/bin/env bash
set -euo pipefail

HOOK_DIR="${0%/*}/../"
if [ -t 2 ]; then
  fg_red=$(tput setaf 1)
  fg_bold_white=$(tput setaf 7; tput bold)
  reset_color=$(tput sgr0)
else
  fg_red=""
  fg_bold_white=""
  reset_color=""
fi

__message() {
  printf '>>  %b\n' "$*"
}

__error() {
  __message "$*" >&2
}

__fatal() {
  __error "$*"
  exit 1
}

__banner() {
  printf '%s\n' '--------------------'
  case "$1" in
    apt)
      __message 'Installing Debian-specific dependencies'
      ;;
    yum)
      __message 'Installing RedHat-specific dependencies'
      ;;
    brew)
      __message 'Installing MacOS-specific dependencies'
      ;;
    *)
      __message 'Installing platform-specific dependencies'
      ;;
  esac
  printf '%s\n' '--------------------'
}

__md5_generate() {
  local file=$1
  openssl md5 "$file" | sed -e 's/MD5(.*)= //g'
}
__md5_verify() {
  local file=$1
  local checksumfile=${2:-"${file}.md5"}
  #echo "Verifying ${file} with ${checksumfile}"

  if diff -q <(__md5_generate "$file") <(cat "$checksumfile") &>/dev/null; then
    return 0
  else
    return 1
  fi
}
__verify_or_source() {
  local file="$1"
  local checksumfile="${file}.md5"

  if [ -f "$checksumfile" ] && __md5_verify "$file" "$checksumfile"; then
    return 0
  fi

  . "$file"

  __md5_generate "$file" > "$checksumfile"
}

__install_packages() {
  local package_manager
  package_manager="$1"; shift
  __banner "${package_manager}"
  __verify_or_source "${HOOK_DIR}/packages/${package_manager}"
}

__when_unknown_os() {
  __error "${fg_red}WARNING:${reset_color} Your operating system is not recognized."
  __fatal 'Unable to automatically install default packages required for these configurations'
}

__when_macos() {
  if command -v brew &>/dev/null; then
    __install_packages 'brew'
  else
    __error "${fg_red}ERROR:${reset_color} You do not appear to have homebrew installed and/or configured properly."
    __error 'Please ensure homebrew is installed and run `brew doctor`'
    __fatal 'Unable to automatically install default packages required for these configurations'
  fi
}

__when_debian() {
  __install_packages 'apt'
}

__when_redhat() {
  __install_packages 'yum'
}

__when_gnulinux() {
  if command -v apt-get &>/dev/null; then
    __when_debian
  elif command -v yum &>/dev/null; then
    __when_redhat
  else
    __when_unknown_os
  fi
}


if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
  # Install OS-specific packages
  case "$(uname -a 2>/dev/null)" in
    *GNU/Linux)
      __when_gnulinux
      ;;
    Darwin*)
      __when_macos
      ;;
    *)
      __when_unknown_os
      ;;
  esac

  printf '%s\n' '--------------------'
  __message 'Done'
  printf '%s\n' '--------------------'
fi
