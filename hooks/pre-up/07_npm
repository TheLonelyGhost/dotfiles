#!/bin/bash
set -euo pipefail

HOOK_DIR="${0%/*}/../"

__message() {
  printf '>>  %s\n' "$*"
}

__error() {
  __message "$*" >&2
}

__fatal() {
  __error "$*"
  exit 1
}

__md5_generate() {
  local file=$1
  openssl md5 "$file" | sed -e 's/MD5(.*)= //g'
}
__md5_verify() {
  local file=$1
  local checksumfile=${2:-"${file}.md5"}
  #echo "Verifying ${file} with ${checksumfile}"

  if diff -q <(__md5_generate "$file") <(cat "$checksumfile") &>/dev/null; then
    return 0
  else
    return 1
  fi
}
__verify_or_source() {
  local file="$1"
  local checksumfile="${file}.md5"

  if [ -f "$checksumfile" ] && __md5_verify "$file" "$checksumfile"; then
    return 0
  fi

  source "$file"

  __md5_generate "$file" > "$checksumfile"
}

__set_npm_install_point() {
  local npm_packages_dir
  npm_packages_dir=${NPM_PACKAGES:-"${HOME}/.npm-packages"}

  npm config set prefix "${npm_packages_dir}"
}

__install_packages() {
  local package_manager
  package_manager="$1"; shift

  if [ -f "${HOOK_DIR}/packages/${package_manager}" ]; then
    __verify_or_source "${HOOK_DIR}/packages/${package_manager}"
  fi
}


if [[ "${BASH_SOURCE[0]}" = "$0" ]] && command -v npm &>/dev/null; then
  printf '%s\n' '--------------------'
  __message 'Node package manager (npm)'
  printf '%s\n' '--------------------'

  __set_npm_install_point
  __install_packages 'npm'

  printf '%s\n' '--------------------'
  __message 'Done'
  printf '%s\n' '--------------------'
fi
