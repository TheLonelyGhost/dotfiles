#!/usr/bin/env bash
set -euo pipefail

__message() {
  printf '>>  %s\n' "$*"
}
__error() {
  __message "$*" >&2
}
__fatal() {
  __error "$*"
  exit 1
}

is_linux() {
  if uname -a 2>/dev/null | grep -qe '.*GNU/Linux' &>/dev/null; then
    # Must not be a linux variant
    return 0
  fi

  return 1
}
is_ubuntu() {
  if is_linux && command -v 'apt-get' &>/dev/null; then
    return 0
  fi

  return 1
}
is_mac() {
  if uname -a 2>/dev/null | grep -qe 'Darwin' &>/dev/null; then
    # Must not be macOS
    return 0
  fi

  return 1
}

__set_man_pages() {
  pushd "${HOME}/.alacritty-src" &>/dev/null

  sudo mkdir -p /usr/local/share/man/man1
  gzip -c ./alacritty.man | sudo tee /usr/local/share/man/man1/alacritty.1.gz >/dev/null

  popd &>/dev/null
}

__set_completions() {
  pushd "${HOME}/.alacritty-src" &>/dev/null

  mkdir -p "${HOME}/.zsh/completion"
  cp ./alacritty-completions.zsh "${HOME}/.zsh/completion/_alacritty"

  popd &>/dev/null
}

__set_desktop_file() {
  if ! is_linux; then
    return 0
  fi

  pushd "${HOME}/.alacritty-src" &>/dev/null

  if [ -e '/usr/share/applications/alacritty.desktop' ]; then
    sudo rm -f /usr/share/applications/alacritty.desktop
  fi
  sudo desktop-file-install alacritty.desktop
  sudo update-desktop-database

  popd &>/dev/null
}
__set_default_config() {
  pushd "${HOME}/.alacritty-src" &>/dev/null
  if is_mac; then
    cp -n ./alacritty_macos.yml "${HOME}/.alacritty.yml"
  else
    cp -n ./alacritty.yml "${HOME}/.alacritty.yml"
  fi
  popd &>/dev/null
}

__build_alacritty() {
  pushd "${HOME}/.alacritty-src" &>/dev/null
  if is_ubuntu; then
    sudo apt-get install -y cmake libfreetype6-dev libfontconfig1-dev xclip
    __message "Building Alacritty from source"
    $cargo build --release
    __message "Installing to /usr/local/bin/alacritty"
    sudo cp -f target/release/alacritty /usr/local/bin/alacritty
  elif is_mac; then
    __message "Building Alacritty.app from source"
    make app
    __message "Installing to /Applications/Alacritty.app"
    sudo cp -rf target/release/osx/Alacritty.app /Applications/
  else
    __fatal "No supported platforms found"
  fi
  popd &>/dev/null

}

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
  printf '%s\n' '-------------------------------------------------------'
  __message 'Terminal Emulator (alacritty)'
  printf '%s\n' '-------------------------------------------------------'

  if command -v 'cargo' &>/dev/null; then
    cargo=$(command -v cargo)
  elif [ -x "${HOME}/.cargo/bin/cargo" ]; then
    cargo="${HOME}/.cargo/bin/cargo"
  else
    __fatal "Could not find \`cargo' binary"
  fi

  if ! command -v 'git' &>/dev/null; then
    __fatal "Could not find \`git' binary"
  fi

  if is_linux; then
    if ! command -v 'desktop-file-install' &>/dev/null; then
      __fatal "Could not find \`desktop-file-install' binary"
    fi
    if ! command -v 'update-desktop-database' &>/dev/null; then
      __fatal "Could not find \`update-desktop-database' binary"
    fi
  fi

  if [ ! -e "${HOME}/.alacritty-src" ]; then
    __message "Downloading source code..."
    git clone https://github.com/jwilm/alacritty.git "${HOME}/.alacritty-src"
    __build_alacritty
  else
    __message "Updating source code..."
    prev_commit=$(git -C "${HOME}/.alacritty-src" rev-parse origin/master)
    git -C "${HOME}/.alacritty-src" fetch origin
    if [[ "$(git -C "${HOME}/.alacritty-src" rev-parse origin/master)" != "$prev_commit" ]]; then
      git -C "${HOME}/.alacritty-src" reset --hard origin/master &>/dev/null
      __build_alacritty
    fi
  fi

  __message "Post-install configurations..."
  __set_completions
  __set_man_pages
  __set_desktop_file
  __set_default_config
  __message "Done"
fi
