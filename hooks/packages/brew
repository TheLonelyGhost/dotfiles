#!/bin/bash
set -euo pipefail

if [ ! -e /usr/include/zlib.h ] && command -v 'defaults' 1>/dev/null 2>/dev/null; then
  # Fix issue in macOS Mojave where XCode doesn't install headers for installed libraries
  if [[ $(defaults read loginwindow SystemVersionStampAsString) =~ 10.14* ]]; then
    sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /
  fi
fi

brew update

brew bundle --file=- <<EOF
# NOTE: Casks up front so we'll be prompted by sudo right away, then wait for rest of user-scoped installations
tap "caskroom/fonts"

# Default GUI workstation
cask "font-twitter-color-emoji"
cask "google-chrome"
# cask "vagrant"  # latest version of vagrant is borked
cask "alfred"
cask "virtualbox"
cask "iterm2"
cask "docker"
cask "telegram"
cask "evernote"
cask "keepassxc"
cask "firefox"

# Extra package repositories
tap "thoughtbot/formulae"
tap "homebrew/services"
tap "caskroom/cask"
tap "neovim/neovim"

# Unix
brew "tree"
brew "ctags"
brew "git"
brew "openssl"
brew "rcm"
brew "reattach-to-user-namespace"
brew "the_silver_searcher"
brew "tmux"
brew "neovim"
brew "direnv"
brew "zsh"
brew "gnupg"
brew "keychain"
brew "tree"
brew "watch"
brew "dos2unix"

# Cross-platform niceties
brew "bat"

# Fix MacOS with GNU
brew "ed"
brew "coreutils"
brew "binutils"
brew "gnutls"
brew "gzip"
brew "wget"
brew "bash"
brew "bash-completion"
brew "make"
brew "less"
brew "openssh"
brew "rsync"
brew "unzip"
brew "parallel"
brew "netcat"
brew "findutils", args: ['with-default-names']
brew "gnu-sed", args: ['with-default-names']
brew "gnu-tar", args: ['with-default-names']
brew "gnu-which", args: ['with-default-names']
brew "grep", args: ['with-default-names']

# Image manipulation
cask "xquartz" # For ImageMagick
brew "imagemagick", args: ['with-x11']
brew "gifsicle"
brew "ffmpeg"

# Backup utils
brew "rclone"

# Appearance
brew "dark-mode"

# Testing
brew "shellcheck"
brew "qt"
cask "phantomjs"
brew "mitmproxy"
brew "jq"

# Programming languages
brew "libyaml" # should come after openssl
brew "node"
brew "sqlite"

# Databases
brew "postgres", restart_service: true
brew "redis", restart_service: true
brew "mongodb", restart_service: true
EOF
