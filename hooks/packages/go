#!/usr/bin/env bash
export GOPATH="${GOPATH:-"${HOME}/.go"}"

HOOK_DIR="${0%/*}/../"
source "${HOOK_DIR}/lib/base.sh"
trap -- '__cleanup_temp' EXIT

PACKAGES=()
__add_package() {
  PACKAGES+=("$1")
}

__install_dep() {
  local tmpdir download_url
  tmpdir=$(mktemp-dir)
  download_url="https://github.com/golang/dep/releases/download/${1}/dep-$(get-goos)-$(get-goarch).zip"

  mkdir -p "${HOME}/.bin"

  pushd "$tmpdir" &>/dev/null
  command curl -sSLo "./dep.zip" "$download_url"
  command unzip "./dep.zip" -d "${HOME}/.bin"
  popd &>/dev/null
}

# ----------------------
# | Add packages below |
# ----------------------

if ! command -v dep &>/dev/null; then
  __install_dep 'v0.3.0'
fi
if ! command -v tag &>/dev/null; then
  __add_package "github.com/aykamko/tag"
fi
if ! command -v jid &>/dev/null; then
  __add_package "github.com/simeji/jid/cmd/jid"
fi
if ! command -v golint &>/dev/null; then
  __add_package "golang.org/x/lint/golint"
fi
if ! command -v checkmake &>/dev/null; then
  __add_package "github.com/mrtazz/checkmake"
fi
if ! command -v gox &>/dev/null; then
  __add_package "github.com/mitchellh/gox"
fi
if ! command -v gopls &>/dev/null; then
  __add_package "golang.org/x/tools/gopls@latest"
fi

# ------------------------
# | Done adding packages |
# ------------------------

if [ ! "${#PACKAGES[@]}" -eq 0 ]; then
  __message "PACKAGES: ${PACKAGES[*]}"

  GO111MODULE=on go get "${PACKAGES[@]}"

  __message 'Go packages installed.'
fi

