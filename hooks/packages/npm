#!/usr/bin/env bash

# Keep npm up-to-date and use pnpm drop-in replacement
command npm install -g npm

PACKAGES=()
__add_package() {
  PACKAGES+=("$1")
}
__ensure_package_installed() {
  __add_package "$1"
}

# ----------------------
# | Add packages below |
# ----------------------

# System tools
__ensure_package_installed "diff-so-fancy"
__ensure_package_installed "git-guilt"
__ensure_package_installed "spoof"

# Linting
__ensure_package_installed "htmlhint"
__ensure_package_installed "jsonlint"
__ensure_package_installed "eslint"

# Language Servers
__ensure_package_installed "dockerfile-language-server-nodejs" # https://github.com/rcjsuen/dockerfile-language-server-nodejs
__ensure_package_installed "bash-language-server" # https://github.com/mads-hartmann/bash-language-server

# For nicer screen recordings
__ensure_package_installed "terminalizer"

# Required for many other tools
# __ensure_package_installed "phantomjs-prebuilt"

# Static site generators
__ensure_package_installed "gitbook-cli"
__ensure_package_installed "netlify-cli"

# ------------------------
# | Done adding packages |
# ------------------------

if [ ${#PACKAGES[@]} -eq 0 ]; then
  cat <<MSG

PACKAGES: none

MSG
else
  cat <<MSG

PACKAGES: ${PACKAGES[@]}

MSG
fi
__add_package "yarn"

if type pyenv &>/dev/null; then
  # Because some things require python2 and we can't guarantee that exists in
  # the currently selected python version. Thanks, pyenv shims... >_>
  PYTHON_VERSION='system' npm install -g "${PACKAGES[@]}"
else
  npm install -g "${PACKAGES[@]}"
fi
