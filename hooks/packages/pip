#!/usr/bin/env bash
set -e

HOOK_DIR="${0%/*}/../"
source "${HOOK_DIR}/lib/base.sh"

declare -a PACKAGES
PACKAGES=()
__add_package() {
  PACKAGES+=("$1")
}
__add_command() {
  if ! command -v "$1" &>/dev/null; then
    __add_package "$2"
  fi
}

# ----------------------
# | Add packages below |
# ----------------------

__add_command 'vd' 'visidata'
__add_command 'gh-refresh' 'github-macros'
__add_command 'asciinema' 'asciinema'
__add_command 'docker-compose' 'docker-compose'
__add_command 'b2' 'b2'
__add_command 'http' 'httpie'
__add_command 'glances' 'glances'
__add_command 'flake8' 'flake8'
__add_command 'isort' 'isort'
__add_command 'yamllint' 'yamllint'
__add_command 'pre-commit' 'pre-commit'
__add_command 'virtualenv' 'virtualenv'
__add_command 'mkdocs' 'mkdocs'
__add_command 'vint' 'vim-vint'
if ! is_wsl; then
  __add_command 'trackerjacker' 'trackerjacker'
  __add_command 'mitmproxy' 'mitmproxy'
fi

# ------------------------
# | Done adding packages |
# ------------------------

python3="${HOME}/.pyenv/shims/python3"

if [ -x "$python3" ]; then
  __message 'Upgrading pip'
  "$python3" -m pip install --upgrade --user pip | awk '{ if($0 !~ /already (installed|satisfied|up-to-date)/) {print} }' || true

  if "$python3" -m pip freeze | grep -qe '^pipx==' &>/dev/null; then
    __message 'Upgrading pipx'
    "$python3" -m pip install --upgrade --user pipx | awk '{ if($0 !~ /already (up-to-date|satisfied)/) {print} }' || true
  else
    __message 'Installing pipx'
    "$python3" -m pip install --user pipx | awk '{ if($0 !~ /already (installed|satisfied)/) {print} }' || true
  fi

  hash -r
fi

if command -v pipx &>/dev/null; then
  cat <<MSG

PACKAGES: ${PACKAGES[@]:-[none]}

MSG
  if [ -n "${PACKAGES[*]}" ]; then
    for pkg in "${PACKAGES[@]}"; do
      pipx install "${pkg}" || true
    done
  fi

  __message 'Upgrading all pipx packages'
  pipx upgrade-all || true
else
  __fatal 'Something went wrong and pipx is not in your PATH'
fi
