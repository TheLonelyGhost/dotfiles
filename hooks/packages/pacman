#!/usr/bin/env bash
set -e

PRE_PACKAGES=()
function __add_pre_package() {
  # These cannot be packages from AUR
  PRE_PACKAGES+=("$1")
}

PACKAGES=()
function __add_package() {
  PACKAGES+=("$1")
}
AUR_PACKAGES=()
function __add_aur_package() {
  AUR_PACKAGES+=("$1")
}
__message() {
  printf '>>  %b\n' "$*"
}


# TODO: Enable AUR use with pamac

if ! command -v yay &>/dev/null; then
  __add_pre_package 'yay'
fi

if [ "${#PRE_PACKAGES[@]}" -gt 0 ]; then
  sudo pacman -S --noconfirm "${PRE_PACKAGES[@]}"
fi

# Image manipulation tools
__add_package "imagemagick"
__add_package "libwebp"
__add_package "optipng"
__add_package "jpegoptim"
__add_package "gifsicle"

# Linting
if [ $(uname -m) != 'aarch64' ]; then
  __add_package "shellcheck"
elif ! command -v shellcheck &>/dev/null; then
  mkdir -p /tmp/shellcheck-install
  pushd /tmp/shellcheck-install &>/dev/null
  curl -SsLo ./shellcheck-stable.linux.tar.xz https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.aarch64.tar.xz
  tar xJf ./shellcheck-stable.linux.tar.xz --strip-components=1
  sudo install -g root -o root -D ./shellcheck /usr/local/bin
  popd &>/dev/null
  rm -rf /tmp/shellcheck-install
fi

# Dev and compiling tools
__add_package "base-devel"
__add_package "openssl"
__add_package "zlib" # For Pyenv
__add_package "xz" # For Pyenv
__add_package "sqlite" # For Python

# Dev command line goodies
__add_package "tree"
__add_package "xclip"
__add_package "tmux"
__add_package "unzip"
__add_package "keychain"

# Workflow stuff
__add_package "universal-ctags"
__add_package "neovim"
__add_aur_package "direnv"
__add_package "bat"
__add_package "ripgrep"
__add_aur_package "rclone-bin"

# Languages
__add_package "go"
__add_package "nodejs"
__add_package "docker"

# GUI tools
__add_aur_package "nixnote2-git"
if [ $(uname -m) != 'aarch64' ]; then
  __add_aur_package "spotify"
fi
__add_aur_package "insomnia"
__add_package "keepassxc"

# ------------------------
# | Done adding packages |
# ------------------------

cat <<MSG

PACKAGES: ${PACKAGES[@]} ${AUR_PACKAGES[@]}

MSG

yay -Yyu --removemake --cleanafter --sudoloop # System updates
yay -S --needed --noconfirm --removemake --cleanafter --noredownload --norebuild --sudoloop --repo "${PACKAGES[@]}"
yay -S --needed --noconfirm --removemake --cleanafter --noredownload --norebuild --sudoloop --aur "${AUR_PACKAGES[@]}"
yay -Yc --noconfirm --sudoloop
