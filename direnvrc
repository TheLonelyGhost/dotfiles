# vim: ft=sh

use_python() {
  local python_root="${HOME}/.pyenv/versions/${1}"
  if [ $# -gt 0 ]; then shift; fi
  load_prefix "${python_root}"
  if [ -x "${python_root}/bin/python3" ]; then
    layout python3 "${python_root}/bin/python3" "$@"
  else
    layout python "${python_root}/bin/python" "$@"
  fi
}

layout_virtualenv() {
  local venv_path="$1"
  source "${venv_path}/bin/activate"
}

layout_virtualenvwrapper() {
  local venv_path="${WORKON_HOME}/$1"
  layout_virtualenv "${venv_path}"
}

use_ruby() {
  local ruby_version="${1:-}"
  if ! has chruby; then
    log_error "Please install chruby to use the 'use ruby <version>' feature"
    return 1
  fi

  # If not given in ./.envrc, defer to the ./.ruby-version file
  [ -n "$ruby_version" ] || { read -r ruby_version <"${PWD}/.ruby-version"; } 2>/dev/null

  if [ -n "$ruby_version" ]; then
    chruby "$version"
    [ $? -eq 0 ] || return $?
  else
    log_error "No ruby version found. Please add a valid ruby version to \`./.ruby-version'"
    return 1
  fi

  if [ -f "${PWD}/Gemfile" ] && command -v bundle && [ ! -f "${PWD}/Gemfile.lock" ]; then
    bundle install --binstubs --standalone
    [ $? -eq 0 ] || return $?
  fi

  if [ -f "${PWD}/Gemfile.lock" ] && [ -d "${PWD}/bin" ]; then
    path_add PATH "${PWD}/bin"
  fi
}

use_chef() {
  eval "$(chef shell-init "$(basename "$SHELL")" | grep -e '^export ')"
}

# Project-specific vim configurations
use_customized_vim() {
  local extravim="$(find_up .vimrc)"
  if [ -n "$extravim" ]; then
    echo "Adding vim configurations: ${extravim}"
    path_add EXTRA_VIM "$extravim"
  fi
}
