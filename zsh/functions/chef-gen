# vim: ft=sh

___trigger_chef_gen_hook() {
  local when type

  when="$1"; shift
  type="$1"; shift

  if ! ( [ -n "$type" ] && [ -n "$when" ] ); then
    # error: 'post-cookbook' or the like was not able to be compiled into a valid hook directory name
    return 1
  fi
  
  if [ ! -d "${HOME}/.chef-gen/hooks/${when}-${type}" ]; then
    # Nothing to do here
    # printf 'No such location: "%s"\n' "~/.chef-gen/hooks/${when}-${type}" >&2
    return 0
  fi

  printf 'FILES: "%s"\n' "$files_to_run"

  find "${HOME}/.chef-gen/hooks/${when}-${type}" | while read file; do
    if ! [ -x "$file" ]; then
      # printf 'File is not an executable file: "%s"\n' "$file" >&2
      continue
    fi

    printf 'Executing "%s"...\n' "$file"
    sh -c 'file="$1"; shift; "$file" $@' arg0 "`realpath "$file"`" $@
    printf 'Done executing "%s".\n' "$file"
  done
}


chef-gen() {
  local company_name company_email out
  company_name="${COMPANY_NAME:-TheLonelyGhost}"
  company_email="${COMPANY_EMAIL:-opensource@thelonelyghost.com}"

  if [ $# -eq 0 ]; then
    printf 'Needs an argument to know what to generate\n' 1>&2
    return 1
  fi

  ___trigger_chef_gen_hook 'pre' $@
  chef generate "$@" -C "$company_name" -m "$company_email"; out=$?
  ___trigger_chef_gen_hook 'post' $@

  return $out
}
