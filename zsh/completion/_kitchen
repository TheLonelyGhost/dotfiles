#compdef kitchen

_kitchen() {
  local curcontext="$curcontext" state line
  typeset -A opt_args

  _arguments '1: :->cmds'\
    '2: :->args'

  case $state in
    cmds)
      _arguments "1:Commands:(console converge create destroy diagnose driver help init list login setup test verify version)"
      ;;
    args)
      case $line[1] in
        converge|create|destroy|diagnose|list|setup|test|verify)
          compadd "$@" all
          _kitchen_instances
          ;;
        login)
          _kitchen_instances
          ;;
      esac
      ;;
  esac
}

_kitchen_instances() {
  if [[ ! -e .kitchen.list.yml || .kitchen.yml -nt .kitchen.list.yml || .kitchen.local.yml -nt .kitchen.list.yml ]]; then
    # update list if config has updated
    if [ -f Gemfile.lock ]; then
      bundle exec kitchen list --bare 2>/dev/null > .kitchen.list.yml
    else
      kitchen list --bare 2>/dev/null > .kitchen.list.yml
    fi
  fi

  _kitchen_instances_cache=()
  _kitchen_instances_cache=("${(@f)$(cat .kitchen.list.yml)}")
  # readarray _kitchen_instances_cache < .kitchen.list.yml
  compadd -a _kitchen_instances_cache
}

_kitchen "$@"
